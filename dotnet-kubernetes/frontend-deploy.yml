apiVersion: apps/v1
kind: Deployment
metadata:
  name: storefrontend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: storefrontend
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: storefrontend
          image: dockersupportbankweb/store:latest
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
            ports:
              - containerPort: 8080
                name: http
          env:
            - name: ProductEndpoint
              value: http://eshop-backend
            - name: ImagePrefix
              value: /images
  selector:
    matchLabels:
      app: storefrontend
---
apiVersion: v1
kind: Service
metadata:
  name: eshop-website
spec:
  type: ClusterIP
  selector:
    app: storefrontend
  ports:
    - port: 80 # SERVICE exposed port
      name: http # SERVICE port name
      protocol: TCP # The protocol the SERVICE will listen to
      targetPort: 8080 # Port to forward to in the POD

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: eshop-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: / # This defines an ingress rule to route traffic to the front end store service
            pathType: Prefix
            backend:
              service:
                name: eshop-website
                port:
                  number: 80
          - path: /images/ # This defines an ingress rule to route image requests to the backend product service
            pathType: Prefix
            backend:
              service:
                name: eshop-backend
                port:
                  number: 80
